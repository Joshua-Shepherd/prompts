---
title: Transpile from programming language X to Y
prompt-version: 4
prompt: |+
    ###
    # Haskell: zip (map show [1,5,9]) ["a","b","c"] 
    # Clojure: (println (map vector '(1 2 3) '(4 5 6))) 
    ###
    # Clojure: (clojure.string/upper-case "MiXeD cAsE")
    # Haskell: map toUpper "MiXeD cAsE"
    ###
    # <2>: <1>
    # <3>:
engine: davinci
temperature: 0.3
max-tokens: 400
top-p: 1
stop-sequences:
- "#"
vars:
- code
- from language
- to language
preprocessors:
- pen-s onelineify
- cat
- cat
postprocessor: pen-s unonelineify
examples:
- min 1 2
- Haskell
- Clojure
var-defaults:
- "(pen-selected-text)"
- "(pen-detect-language-ask)"
- "(read-string-hist \"Pen To language: \")"
filter: on